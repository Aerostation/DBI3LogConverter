#!/usr/bin/env python
# vim: set shiftwidth=4 softtabstop=4 autoindent expandtab:
###########################################################################
# Copyright (C) Aerostation/Ronald Thornton 2018-2020
# All rights reserved.
###########################################################################
"""DBI3cli shim to call main()"""
from __future__ import print_function
import os
import sys

if __name__ == "__main__":
    """DBI3cli main
    
    This could be called directly in the git repo or after packaged by pyinstaller/setuptools.
    
    "sys" attribute "frozen" exists if this is running inside pyinstaller distribution and __version__ should exist
    else we try to construct the current version from git.
    else we use any current __version__.py file.
    """
    if getattr(sys, 'frozen', False):
        # In the pyinstaller bundle, __version__ must already be in place
        pass
    else:
        # Try to update __version__ from git
        main_path = os.path.dirname(os.path.realpath(sys.argv[0])) if sys.argv[0] else None
        ver_filename = os.path.join(main_path, 'dbi3_access', 'lib', '__version__.py')
        try:
            from setuptools_scm import get_version
            version = get_version()
        except (UserWarning, LookupError):
            # NOW let later include try to find the existing __version__ file (setuptools package)
            # raise Exception('GIT must be in the path for get_version() to work')
            pass
        else:
            # We are in the git repo so update the __version__ file for development runs.
            with open(ver_filename, 'w') as v_file:
                print('# development run generated version from git', file=v_file)
                print('__version__ = "{}"'.format(version), file=v_file)

    # import the main so we can call it (will expect to find the __version__.py)
    try:  # Handle either python 2/3 import syntax
        from dbi3_access.dbi3_main import main
    except ImportError:
        from .dbi3_access.dbi3_main import main

    sys.exit(main())
